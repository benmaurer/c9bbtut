{"ts":1342009036657,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/*!\n * Express\n * Copyright(c) 2010 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar connect = require('connect')\n  , HTTPSServer = require('./https')\n  , HTTPServer = require('./http')\n  , Route = require('./router/route')\n\n/**\n * Re-export connect auto-loaders.\n * \n * This prevents the need to `require('connect')` in order\n * to access core middleware, so for example `express.logger()` instead\n * of `require('connect').logger()`.\n */\n\nvar exports = module.exports = connect.middleware;\n\n/**\n * Framework version.\n */\n\nexports.version = '2.5.11';\n\n/**\n * Shortcut for `new Server(...)`.\n *\n * @param {Function} ...\n * @return {Server}\n * @api public\n */\n\nexports.createServer = function(options){\n  if ('object' == typeof options) {\n    return new HTTPSServer(options, Array.prototype.slice.call(arguments, 1));\n  } else {\n    return new HTTPServer(Array.prototype.slice.call(arguments));\n  }\n};\n\n/**\n * Expose constructors.\n */\n\nexports.HTTPServer = HTTPServer;\nexports.HTTPSServer = HTTPSServer;\nexports.Route = Route;\n\n/**\n * View extensions.\n */\n\nexports.View =\nexports.view = require('./view');\n\n/**\n * Response extensions.\n */\n\nrequire('./response');\n\n/**\n * Request extensions.\n */\n\nrequire('./request');\n\n// Error handler title\n\nexports.errorHandler.title = 'Express';\n\n"]],"start1":0,"start2":0,"length1":0,"length2":1329}]],"length":1329}
